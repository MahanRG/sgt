# Testing
alphabet_set      <- c("A", "B")
alphabet_set_size <- length(alphabet_set)
# Testing
alphabet_set      <- c("A", "B")
alphabet_set_size <- length(alphabet_set)
seq <- "AB"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
library(matrixStats)
library(dplyr)
source('sgt.R', echo = F)
source('kmeans.R', echo = F)
alphabet_set      <- c("A", "B", "C")
# Testing
alphabet_set      <- c("A", "B")
alphabet_set_size <- length(alphabet_set)
seq <- "AB"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
# Testing
alphabet_set      <- c("A", "B", "C", "D", "E", "F")
alphabet_set_size <- length(alphabet_set)
seq <- "AB"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
seq <- "ABC"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
# Testing
alphabet_set      <- c("E", "F")
alphabet_set_size <- length(alphabet_set)
seq <- "ABC"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
# Testing
alphabet_set      <- c("E", "F")
alphabet_set_size <- length(alphabet_set)
seq <- "EF"
# Testing
alphabet_set      <- c("A", "B", "C", "D", "E", "F")
alphabet_set_size <- length(alphabet_set)
seq <- "ABC"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
seq <- "EF"
kappa <- 10
###### Algorithm 1 ######
sgt_parts_alg1 <- f_sgt_parts(sequence = seq, kappa = kappa, alphabet_set_size = alphabet_set_size)
print(sgt_parts_alg1)
sgt <- f_SGT(W_kappa = sgt_parts_alg1$W_kappa, W0 = sgt_parts_alg1$W0,
Len = sgt_parts_alg1$Len, kappa = kappa)  # Set Len = NULL for length-sensitive SGT.
print(sgt)
